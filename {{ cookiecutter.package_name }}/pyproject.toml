{%- set license_classifiers = {
    "MIT": "License :: OSI Approved :: MIT License",
    "BSD-3-Clause": "License :: OSI Approved :: BSD License",
    "ISC": "License :: OSI Approved :: ISC License (ISCL)",
    "Apache-2.0": "License :: OSI Approved :: Apache Software License",
    "GPL-3.0-only": "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
} -%}
[project]
name = "{{ cookiecutter.package_name }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
authors = [
    {name = "{{ cookiecutter.full_name }}", email = "{{ cookiecutter.email }}"},
]
readme = "README.md"
license = {file = "LICENSE"}
classifiers=[
{%- if cookiecutter.open_source_license in license_classifiers %}
    "{{ license_classifiers[cookiecutter.open_source_license] }}",
{%- endif %}
]
dependencies = [
{%- if cookiecutter.command_line_interface|lower == "click" %}
"click>=8.1.7",
{%- endif %}
]
requires-python = ">=3.8,<4.0"

{% if cookiecutter.command_line_interface|lower == "click" -%}
[project.scripts]
{{ cookiecutter.package_name }} = "{{ cookiecutter.package_name }}.cli:main"

{% endif -%}

[tool.pdm.dev-dependencies]
test = [
    "pytest>=7.2.0",
    "pytest-random>=0.2",
    "pytest-repeat>=0.9.1",
    "pytest-describe>=2.1.0",
    "pytest-expecter>=3.0",
    "pytest-mock>=3.11.1",
    "pytest-watch>=4.2.0",
]
dev = [
  "deptry>=0.6.4",
  "mypy>=0.981",
  "pre-commit>=2.20.0",
  "bump2version>=1.0.1",
  "nbstripout>=0.6.0",
  "ipython>=8.12.0",
  "jupyter>=1.0.0;sys_platform != 'win32'"
]

[tool.black]
line-length = 120
target-version = ["py37"]
preview = true

[tool.mypy]
files = ["src/python/{{cookiecutter.package_name}}", "tests/python"]
cache_dir = ".cache/mypy/"
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.per-file-ignores]
"tests/python/*" = [
    # Use of assert detected
    "S101",
]

[build-system]
requires = ["setuptools>=61", "wheel", "setuptools-rust>=1.5.2"]
build-backend = "setuptools.build_meta"
